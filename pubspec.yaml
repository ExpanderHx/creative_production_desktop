name: creative_production_desktop
description: Creative production desktop
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.0.3 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # 国际化
  flutter_localizations:
    sdk: flutter

  # 国际化
  easy_localization: ^3.0.2

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  # 基于 Apple 样式图标的库比蒂诺小部件的默认图标资源
  cupertino_icons: ^1.0.2

  # 允许 Flutter 桌面应用定义系统/应用范围内的热键（即快捷键）
  hotkey_manager: ^0.1.7

  # 用于查询应用程序包信息的 Flutter 插件，例如 iOS 上的 CFBundleVersion 或 Android 上的版本代码。
  package_info_plus: ^4.0.1

  # 基于字符串的路径操作库。您熟悉和喜爱的所有路径操作，以及对Windows，POSIX（Linux和Mac OS X）和Web的可靠支持。
  path: ^1.8.3

  # Flutter 插件，用于获取主机平台文件系统上的常用位置，例如临时和应用程序数据目录。
  path_provider: ^2.0.15

  # 特定于平台的持久存储以获取简单数据 （iOS 和 macOS 上的 NSUserDefaults，Android 上的 SharedPreferences 等）。 数据可以异步保存到磁盘， 并且不能保证写入将在之后保留到磁盘 返回，因此此插件不得用于存储关键数据
  shared_preferences: ^2.1.2

  # 用纯 Dart 编写的轻量级和超快的键值数据库。使用 AES-256 进行高度加密
#  hive: ^2.2.3

  # 可让您轻松地在 Windows、macOS 和 Linux 上自定义和使用 Flutter 桌面应用程序窗口
#  bitsdojo_window: ^0.1.5

  # 用于使用 FFI 访问常见 Win32 API 的 Dart 库。不需要C！
  win32: ^5.0.3

  #  允许 Flutter 桌面应用程序调整窗口大小和重新定位窗口
  window_manager: ^0.3.4

  # 一个非常易于使用的 flutter 吐司库
  bot_toast: ^4.0.4

  # 在 Flutter 应用程序中添加对浅色和深色主题的支持的最简单方法
  adaptive_theme: ^3.3.0

  # 允许 Flutter 桌面 应用自动更新自己 (基于 sparkle 和 winsparkle)
  auto_updater: ^0.1.7

  # 允许 Flutter 应用程序观看剪贴板更改
  clipboard_watcher: ^0.2.0

  # 允许 Flutter 桌面应用程序在启动/登录时自动启动
  launch_at_startup: ^0.2.2

  # 一个强大的Dart/FlutterHTTP客户端，支持全局配置， 拦截器、表单数据、请求取消、文件上传/下载、 超时和自定义适配器等
  dio: ^5.2.0+1

  # 用于调整屏幕和字体大小的颤振插件。让您的UI在不同的屏幕尺寸上显示合理的布局
  flutter_screenutil: ^5.8.4

  # 强大的官方扩展图像库，支持占位符（加载）/失败状态，缓存网络，缩放平移图像，照片视图，滑出页面，编辑器（裁剪，旋转，翻转），绘画自定义等
  extended_image: ^8.0.2

  # flutter markdown 它支持原始格式，但没有内联 .HTML。
  flutter_markdown: ^0.6.15

  # 一个简单易用的 markdown 渲染组件
  markdown_widget: ^2.2.0

  # 使用FlexColorScheme制作漂亮的基于Flutter Material Design的主题
  flex_color_scheme: ^7.1.2

  # 用于在桌面中创建和管理多窗口
  desktop_multi_window: ^0.2.0

  # 对 InheritedWidget 组件的上层封装，使其更易用，更易复用
  provider: ^6.0.5

  # 允许 Flutter 桌面应用从屏幕上提取文本
  screen_text_extractor: ^0.1.3

  # 允许 Flutter 桌面应用程序定义系统托盘
  tray_manager: ^0.2.0

  # 非常快速，易于使用，并且完全异步的FlutterNoSQL数据库
  isar: ^3.1.0+1

  isar_flutter_libs: ^3.1.0+1

  # Flutter的核心下拉按钮小部件，带有稳定的下拉菜单和许多其他选项，您可以 根据您的需求进行定制
  dropdown_button2: ^2.1.3

  # 使用 Flutter 设计漂亮的本机 Windows 应用程序
#  fluent_ui: ^4.6.2

  # Windows、macOS 和 Linux 上 Flutter 的窗口亚克力、云母和透明效果
  flutter_acrylic: ^1.1.3

  # 一个为Flutter提供水平或垂直多重拆分视图的小部件
  multi_split_view: ^2.4.0

  # 加载中动画
  loading_animation_widget: ^1.2.0+4

  # 剪切板
  clipboard: ^0.1.3

  # 表单生成器
  flutter_form_builder: ^9.0.0

  # 适用于 Linux/Win/Mac 的进程运行帮助程序
  process_run: ^0.13.0

  # 允许用户将文件拖动到颤振桌面应用程序的插件
  desktop_drop: ^0.4.1

  # 允许您使用本机文件资源管理器来选择单个或多个文件
  file_picker: ^5.3.2

  # 简单、快速地生成 RFC4122 UUID
  uuid: ^3.0.7

  # 包含用于使用异步的样式的实用程序类 计算
  async: ^2.11.0

  # 在桌面应用程序上显示 Web 视图窗口。
  desktop_webview_window: ^0.2.0

  # 一个用于启动 URL 的 Flutter 插件
  url_launcher: ^6.1.11

  # 记录应用操作，捕获和处理异常和错误，显示警报并共享日志报告
  talker_flutter: ^3.1.7

  # 轻量级和可定制的dio http客户端记录器在谈话者的基础上。
  talker_dio_logger: ^2.2.1

  # 全面的剪切板 需要安装 Rust 对于 macOS 或 Linux，请在终端中执行以下命令 curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
#  super_clipboard: ^0.4.0


  # acrylic_any是一个可以将任何小部件转换为模糊对象的包
#  acrylic_any: ^0.0.1



  # chat gpt sdk
#  chat_gpt_sdk: ^2.2.1


dev_dependencies:
  flutter_test:
    sdk: flutter



  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

  isar_generator: ^3.1.0+1
  build_runner: ^2.4.5

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  assets:
    - assets/translations/
    - assets/images/
    - assets/images/system/
    - assets/images/background/
    - assets/images/chat/


  fonts:
    - family: Ping Fang
      fonts:
        - asset: assets/fonts/PingFang/PingFang-SC.ttf
    - family: Roboto Mono
      fonts:
        - asset: assets/fonts/RobotoMono-Regular.ttf

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
